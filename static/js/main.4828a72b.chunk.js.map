{"version":3,"sources":["contexts/EthContext/EthContext.js","contexts/EthContext/state.js","contexts/EthContext/EthProvider.jsx","contexts/EthContext/useEth.js","components/Intro/Welcome.jsx","components/Intro/Tree.jsx","components/Intro/Desc.jsx","components/Intro/index.jsx","components/Voting/Title.jsx","components/Voting/Address.jsx","components/Voting/Voters.jsx","components/Voting/Proposals.jsx","components/Voting/WorkflowStatus.jsx","components/Voting/Ballot.jsx","components/Voting/TallyVotes.jsx","components/Voting/VoteResult.jsx","components/Voting/NoticeNoArtifact.jsx","components/Voting/NoticeWrongNetwork.jsx","components/Voting/NoticeOnlyAdmin.jsx","components/Voting/index.jsx","components/Footer.jsx","App.jsx","index.js"],"names":["EthContext","createContext","actions","initialState","artifact","web3","accounts","networkID","contract","reducer","state","action","type","data","Error","EthProvider","children","useReducer","dispatch","init","useCallback","Web3","givenProvider","eth","requestAccounts","net","getId","abi","address","networks","Contract","err","console","error","methods","owner","call","contractOwner","isCurrentUserOwner","options","fromBlock","toBlock","getPastEvents","listVotersEvent","listVoteEvent","listWorkflowEvent","useEffect","tryInit","require","events","handleChange","window","ethereum","on","alert","location","reload","forEach","e","removeListener","Provider","value","useEth","useContext","Welcome","className","Tree","Desc","href","target","rel","Intro","Title","Address","Voters","setValue","useState","storageValue","setStorageValue","getVoter","tagName","valeur","document","getElementById","from","then","results","isRegistered","catch","message","addVoter","send","deleteVoter","defaultValue","id","size","onClick","map","item","returnValues","voterAddress","Proposals","getOneProposal","description","addProposal","WorkflowStatus","nextWorkflowStatus","log","setWorkflowStatus","newStatus","Ballot","storageProposal","setStorageProposal","getAllProposals","setVote","index","some","voter","filter","voterBallot","proposalId","transactionHash","TallyVotes","tallyDraw","VoteResult","getWinningProposalsID","NoticeNoArtifact","NoticeWrongNetwork","NoticeOnlyAdmin","Voting","Link","uri","text","Footer","App","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.4828a72b.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst EthContext = createContext();\n\nexport default EthContext;\n","const actions = {\n  init: \"INIT\",\n};\n\nconst initialState = {\n  artifact: null,\n  web3: null,\n  accounts: null,\n  networkID: null,\n  contract: null\n};\n\nconst reducer = (state, action) => {\n  const { type, data } = action;\n  switch (type) {\n    case actions.init:\n      return { ...state, ...data };\n    default:\n      throw new Error(\"Undefined reducer action type\");\n  }\n};\n\nexport {\n  actions,\n  initialState,\n  reducer\n};\n","import React, { useReducer, useCallback, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\n\nfunction EthProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  //const [listWorkflowEvent, setListWorkflowEvent] = useState([]);\n\n  const init = useCallback(async (artifact) => {\n    if (artifact) {\n      const web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\n      const accounts = await web3.eth.requestAccounts();\n      const networkID = await web3.eth.net.getId();\n      const { abi } = artifact;\n      let address, contract;\n      try {\n        address = artifact.networks[networkID].address;\n        contract = new web3.eth.Contract(abi, address);\n      } catch (err) {\n        console.error(err);\n      }\n      let contractOwner = await contract.methods.owner().call();\n      const isCurrentUserOwner = contractOwner === accounts[0];\n      // On recup tous les events passés du contrat\n      let options = {\n        fromBlock: 0,\n        toBlock: \"latest\",\n      };\n\n      let listVotersEvent = await contract.getPastEvents(\n        \"VoterRegistered\",\n        options\n      );\n\n      let listVoteEvent = await contract.getPastEvents(\"Voted\", options);\n      /*let listVoteEvent = [];\n      contract.events\n        .Voted(options1)\n        .on(\"data\", (event) => listVoteEvent.push(event));*/\n\n      let listWorkflowEvent = await contract.getPastEvents(\n        \"WorkflowStatusChange\",\n        options\n      );\n      /*contract.events\n        .WorkflowStatusChange(options1)\n        .on(\"data\", (event) => listWorkflowEvent.push(event));*/\n      dispatch({\n        type: actions.init,\n        data: {\n          artifact,\n          web3,\n          accounts,\n          networkID,\n          contract,\n          listVotersEvent,\n          listWorkflowEvent,\n          listVoteEvent,\n          contractOwner,\n          isCurrentUserOwner,\n        },\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifact = require(\"../../contracts/Voting.json\");\n        init(artifact);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    tryInit();\n  }, [init]);\n\n  useEffect(() => {\n    const events = [\"chainChanged\", \"accountsChanged\"];\n    const handleChange = () => {\n      init(state.artifact);\n    };\n\n    window.ethereum.on(\"disconnect\", function () {\n      alert(\"il faut se connecter\");\n    });\n    window.ethereum.on(\"accountsChanged\", function () {\n      window.location.reload();\n    });\n    window.ethereum.on(\"chainChanged\", function () {\n      window.location.reload();\n    });\n\n    events.forEach((e) => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach((e) => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init, state.artifact]);\n\n  return (\n    <EthContext.Provider\n      value={{\n        state,\n        dispatch,\n      }}\n    >\n      {children}\n    </EthContext.Provider>\n  );\n}\n\nexport default EthProvider;\n","import { useContext } from \"react\";\nimport EthContext from \"./EthContext\";\n\nconst useEth = () => useContext(EthContext);\n\nexport default useEth;\n","function Welcome() {\n  return (\n    <div className=\"welcome\">\n      <h1>👋 Third challenge of my blockchain dev training!</h1>\n      <p>Project 3 - Voting dapp</p>\n      <p>Th project structure is described bellow</p>\n    </div>\n  );\n}\n\nexport default Welcome;\n","function Tree() {\n  return (\n    <code>\n      {`.\\n`}\n      {`├── client`}\n      <span className=\"primary-color\">\n        {`   # React project (create-react-app)\\n`}\n      </span>\n      {`├    └── src\\n`}\n      {`├         ├── componenents\\n`}\n      <span className=\"third-color\">{`   # React components\\n`}</span>\n      {`├         ├     ├──componenents`}\n      <span className=\"third-color\">{`   # Actual Front part of the dapp\\n`}</span>\n      {`├         ├     └──...`}\n      <span className=\"third-color\">{`   # Default components\\n`}</span>\n      {`├         ├── contexts/ETHContext`}\n      <span className=\"third-color\">\n        {`   # React context and web3 initiator\\n`}\n      </span>\n      {`├         └── contract`}\n      <span className=\"secondary-color\">{`   # Contract definition\\n`}</span>\n      {`└── truffle`}\n      <span className=\"primary-color\">{`  # Truffle project`}</span>\n    </code>\n  );\n}\n\nexport default Tree;\n","function Desc() {\n  return (\n    <p>\n      The statement of work is available on the &nbsp;\n      <a\n        href=\"https://formation.alyra.fr/products/developpeur-blockchain/categories/2149193530/posts/2153543735\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        Alyra website\n      </a>\n      , my work is based on the latest version of the REACT truffle box.\n    </p>\n  );\n}\n\nexport default Desc;\n","import Welcome from \"./Welcome\";\nimport Tree from \"./Tree\";\nimport Desc from \"./Desc\";\n\nfunction Intro() {\n  return (\n    <>\n      <Welcome />\n      <Tree />\n      <Desc />\n    </>\n  );\n}\n\nexport default Intro;\n","function Title() {\n  return <h2>See it in action</h2>;\n}\n\nexport default Title;\n","// == Import\n//import PropTypesLib from \"prop-types\";\n//import { useState } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\n\n// == Composant\nfunction Address() {\n  const { state } = useEth();\n  //const [value, setValue] = useState(\"?\");\n\n  return (\n    <details>\n      <summary>Current public address</summary>\n      <p>Voici l'adress que vous utilisez: {state.accounts}</p>\n    </details>\n  );\n}\n\n// == Export\nexport default Address;\n","import { useState } from \"react\";\n//import { useState, useEffect } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\n\nfunction Voters({ setValue }) {\n  const {\n    state: { contract, accounts, listVotersEvent, isCurrentUserOwner },\n  } = useEth();\n  const [storageValue, setStorageValue] = useState(null);\n  /*\n  * When uncomment switch import on line 1\n  * This useEffect is disabled as it doesn't update the rendering currently. Still have to check why but Const object contract and listVotersEvent are decalred through useEth and not useState it might be the root cause of this\n  *\n  useEffect(() => {\n    console.log(\"walk through useEffect\");\n    let options1 = {\n      fromBlock: 0,\n    };\n\n    //event listener\n    contract.events.VoterRegistered(options1).on(\"data\", (event) => {\n      console.log(\"walk through event function : \" + event);\n      console.log(event);\n      listVotersEvent.push(event);\n    });\n  }, [contract.events, listVotersEvent]);\n  */\n\n  const getVoter = async (e) => {\n    if (e.target.tagName === \"INPUT\") {\n      return;\n    }\n    let valeur = document.getElementById(\"getVoter\").value;\n    if (valeur === \"\") {\n      alert(\"Please enter a public address to check.\");\n      return;\n    }\n\n    await contract.methods\n      .getVoter(valeur)\n      .call({ from: accounts[0] })\n      .then((results) => {\n        results.isRegistered\n          ? setStorageValue(\n              \"Public address : \" + valeur + \" is registered as voter\"\n            )\n          : setStorageValue(\"Not registered as voter\");\n      })\n      .catch((err) => alert(err.message));\n  };\n\n  const addVoter = async (e) => {\n    if (e.target.tagName === \"INPUT\") {\n      return;\n    }\n    let valeur = document.getElementById(\"addVoter\").value;\n    if (valeur === \"\") {\n      alert(\"Please enter a public address to register.\");\n      return;\n    }\n    await contract.methods\n      .addVoter(valeur)\n      .send({ from: accounts[0] })\n      .catch((err) => alert(err));\n  };\n\n  const deleteVoter = async (e) => {\n    if (e.target.tagName === \"INPUT\") {\n      return;\n    }\n    let valeur = document.getElementById(\"deleteVoter\").value;\n    if (valeur === \"\") {\n      alert(\"Please enter a public address to register.\");\n      return;\n    }\n    await contract.methods\n      .deleteVoter(valeur)\n      .send({ from: accounts[0] })\n      .catch((err) => alert(err.message));\n  };\n\n  return (\n    <div>\n      <details>\n        <summary>Add voters</summary>\n        <div>\n          <p>Allow voter registration by the owner of the contract</p>\n          <input type=\"address\" defaultValue=\"\" id=\"addVoter\" size=\"45\" />\n          <button onClick={addVoter}>\n            Set the address you want to register\n          </button>\n        </div>\n        <br />\n        <div>\n          <p>Delete voter registration by the owner of the contract</p>\n          <input type=\"address\" defaultValue=\"\" id=\"deleteVoter\" size=\"45\" />\n          <button onClick={deleteVoter}>\n            Set the address you want to delete\n          </button>\n        </div>\n        <br />\n        <p>Allow user to check if an address is authorzied to vote</p>\n        <div>\n          <input type=\"address\" defaultValue=\"\" id=\"getVoter\" size=\"45\" />\n          <button onClick={getVoter}>Type the address you want to check</button>\n          {storageValue && <p>Voter status : </p>}\n          <span className=\"secondary-color\">\n            <strong>{storageValue}</strong>\n          </span>\n          <br />\n          <br />\n        </div>\n        {isCurrentUserOwner && (\n          <table className=\"eventTable\">\n            <thead>\n              <tr>\n                <th>List of past events related to voters</th>\n              </tr>\n            </thead>\n            <tbody>\n              {listVotersEvent.map((item) => (\n                <tr key={item.id}>\n                  <td>Voter Address </td>\n                  <td>{item.returnValues.voterAddress}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </details>\n    </div>\n  );\n}\n\nexport default Voters;\n","import { useState } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\n\nfunction Proposals({ setValue }) {\n  const {\n    state: { contract, accounts },\n  } = useEth();\n  const [storageValue, setStorageValue] = useState(null);\n\n  const getOneProposal = async (e) => {\n    if (e.target.tagName === \"INPUT\") {\n      return;\n    }\n    let valeur = document.getElementById(\"getOneProposal\").value;\n    if (valeur === \"\") {\n      alert(\"Please enter a proposal ID to check.\");\n      return;\n    }\n\n    await contract.methods\n      .getOneProposal(valeur)\n      .call({ from: accounts[0] })\n      .then((results) => {\n        results.description\n          ? setStorageValue(results.description)\n          : setStorageValue(\"No proposal with this ID\");\n      })\n      .catch((err) => alert(err.message));\n  };\n\n  const addProposal = async (e) => {\n    if (e.target.tagName === \"INPUT\") {\n      return;\n    }\n    let valeur = document.getElementById(\"addProposal\").value;\n    if (valeur === \"\") {\n      alert(\"Please enter a proper text.\");\n      return;\n    }\n    await contract.methods\n      .addProposal(valeur)\n      .send({ from: accounts[0] })\n      .then((results) => alert(\"Porposal registered\"))\n      .catch((err) => alert(err.message));\n  };\n\n  return (\n    <div>\n      <details>\n        <summary>Proposal</summary>\n        <div>\n          <p>Allow proposal registration by designated voters</p>\n          <textarea type=\"address\" defaultValue=\"\" id=\"addProposal\" size=\"45\" />\n          <button onClick={addProposal}>Register your proposal</button>\n        </div>\n        <br />\n        <br />\n        <p>Check a specific proposal</p>\n        <div>\n          <input type=\"address\" defaultValue=\"\" id=\"getOneProposal\" size=\"45\" />\n          <button onClick={getOneProposal}>\n            Type the proposal ID you want to check\n          </button>\n          {storageValue && (\n            <p>\n              <strong>{storageValue}</strong>\n            </p>\n          )}\n          <br />\n        </div>\n      </details>\n    </div>\n  );\n}\n\nexport default Proposals;\n","//import { useEffect } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\n\nfunction WorkflowStatus({ setValue }) {\n  const {\n    state: { contract, accounts, listWorkflowEvent },\n  } = useEth();\n\n  /*\n  * When uncomment switch import on line 1\n  * This useEffect is disabled as it doesn't update the rendering currently. Still have to check why but Const object contract and listVotersEvent are decalred through useEth and not useState it might be the root cause of this\n  *\n  useEffect(() => {\n    console.log(\"walk through useEffect\");\n    let options1 = {\n      fromBlock: 0,\n    };\n    //event listener\n    contract.events\n        .WorkflowStatusChange(options1)\n        .on(\"data\", (event) => listWorkflowEvent.push(event));\n  }, [contract.events, listWorkflowEvent]);\n  */\n\n  const nextWorkflowStatus = async () => {\n    console.log(\"NextWorkflowStatus\");\n    await contract.methods\n      .nextWorkflowStatus()\n      .send({ from: accounts[0] })\n      .then((results) => alert(\"workflowStatus changed\"))\n      .catch((err) => alert(err.message));\n  };\n\n  const setWorkflowStatus = async (e) => {\n    if (e.target.tagName === \"INPUT\") {\n      return;\n    }\n    let valeur = document.getElementById(\"setWorkflowStatus\").value;\n    if (valeur === \"\") {\n      alert(\"Please enter a public address to register.\");\n      return;\n    }\n    await contract.methods\n      .setWorkflowStatus(valeur)\n      .send({ from: accounts[0] });\n  };\n\n  return (\n    <div>\n      <details>\n        <summary>WorkflowStatus</summary>\n        <div>\n          <p>Move to the next workflow status</p>\n          <button onClick={nextWorkflowStatus}>\n            Switch to the new workflow status\n          </button>\n        </div>\n        <br />\n        <br />\n        <p>Allow user to check if an address is authorzied to vote</p>\n        <div>\n          <input\n            type=\"address\"\n            defaultValue=\"\"\n            id=\"setWorkflowStatus\"\n            size=\"45\"\n          />\n          <button onClick={setWorkflowStatus}>\n            Set the new workflow status\n          </button>\n          <br />\n          <br />\n          <table className=\"eventTable\">\n            <thead>\n              <tr>\n                <th>List of past events related to workflow</th>\n              </tr>\n            </thead>\n            <tbody>\n              {listWorkflowEvent.map((item) => (\n                <tr key={item.id}>\n                  <td>Address {item.address}</td>\n\n                  <td>New status {item.returnValues.newStatus}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </details>\n    </div>\n  );\n}\n\nexport default WorkflowStatus;\n","import { useState } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\n\nfunction Ballot({ setValue }) {\n  const {\n    state: { contract, accounts, listVoteEvent },\n  } = useEth();\n  const [storageProposal, setStorageProposal] = useState(null);\n\n  const getAllProposals = async () => {\n    await contract.methods\n      .getAllProposals()\n      .call({ from: accounts[0] })\n      .then((results) => setStorageProposal(results))\n      .catch((err) => alert(err.message));\n  };\n\n  const setVote = async (e) => {\n    if (e.target.tagName === \"INPUT\") {\n      return;\n    }\n\n    let valeur = document.getElementById(\"setVote\").value;\n    if (valeur === \"\") {\n      alert(\"Please choose a proposal.\");\n      return;\n    }\n    await contract.methods.setVote(valeur).send({ from: accounts[0] });\n  };\n\n  return (\n    <div>\n      <details>\n        <summary>Vote</summary>\n        <div>\n          <p>Display all the proposals</p>\n          <button onClick={getAllProposals}>getAllProposals</button>\n        </div>\n        {storageProposal && (\n          <table className=\"eventTable\">\n            <thead>\n              <tr>\n                <th>List of proposals</th>\n              </tr>\n            </thead>\n            <tbody>\n              {storageProposal.map((item, index) => (\n                <tr key={index}>\n                  <td>Proposal ID : {index}</td>\n                  <td>Description : {item.description}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n        <br />\n        <br />\n        {listVoteEvent.some(\n          (item) => item.returnValues.voter === accounts[0]\n        ) ? (\n          <div>\n            <p>You have already voted</p>\n            {listVoteEvent\n              .filter((item) => item.returnValues.voter === accounts[0])\n              .map((voterBallot) => (\n                <>\n                  <p>\n                    Your vote was registered for the proposal ID =\n                    <em>{voterBallot.returnValues.proposalId}</em>\n                  </p>\n                  <p>\n                    It has been recoreded through the transaction identified by\n                    the following hash = <em>{voterBallot.transactionHash}</em>\n                  </p>\n                </>\n              ))}\n          </div>\n        ) : (\n          <div>\n            <p>Select a proposal ID based on the list above</p>\n            <input type=\"address\" defaultValue=\"\" id=\"setVote\" size=\"45\" />\n            <button onClick={setVote}>Select your proposal</button>\n          </div>\n        )}\n        <br />\n        <br />\n      </details>\n    </div>\n  );\n}\n\nexport default Ballot;\n","//import { useState } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\n\nfunction TallyVotes({ setValue }) {\n  const {\n    state: { contract, accounts },\n  } = useEth();\n  //const [storageValue, setStorageValue] = useState(null);\n\n  const tallyDraw = async () => {\n    console.log(\"tallyDraw\");\n    await contract.methods\n      .tallyDraw()\n      .send({ from: accounts[0] })\n      .then((results) => alert(\"Voting session has ended\"))\n      .catch((err) => alert(err.message));\n  };\n\n  return (\n    <div>\n      <details>\n        <summary>TallyVotes</summary>\n        <p>Tally votes by the owner of the contract</p>\n        <button onClick={tallyDraw}>\n          Tally votes and close the voting session\n        </button>\n        <br />\n      </details>\n    </div>\n  );\n}\n\nexport default TallyVotes;\n","import { useState } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\n\nfunction VoteResult({ setValue }) {\n  const {\n    state: { contract, accounts },\n  } = useEth();\n  const [storageProposal, setStorageProposal] = useState(null);\n  console.log(\"storageProposal : \" + storageProposal);\n\n  const getWinningProposalsID = async () => {\n    await contract.methods\n      .getWinningProposalsID()\n      .call({ from: accounts[0] })\n      .then((results) => setStorageProposal(results))\n      .catch((err) => alert(err.message));\n  };\n\n  return (\n    <div>\n      <details>\n        <summary>Voting session results</summary>\n        <div>\n          <p>Display voting session results</p>\n          <button onClick={getWinningProposalsID}>getWinningProposals</button>\n        </div>\n        {storageProposal && (\n          <table className=\"eventTable\">\n            <thead>\n              <tr>\n                <th>Wining proposal ID</th>\n              </tr>\n            </thead>\n            <tbody>\n              {storageProposal.map((item, index) => (\n                <tr key={index}>\n                  <td>Proposal ID : {index}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n        <br />\n        <br />\n      </details>\n    </div>\n  );\n}\n\nexport default VoteResult;\n","function NoticeNoArtifact() {\n  return (\n    <p>\n      ⚠️ Cannot find <span className=\"code\">Voting</span> contract artifact.\n      Please complete the above preparation first, then restart the react dev\n      server.\n    </p>\n  );\n}\n\nexport default NoticeNoArtifact;\n","function NoticeWrongNetwork() {\n  return (\n    <p>\n      ⚠️ MetaMask is not connected to the same network as the one you deployed to.\n    </p>\n  );\n}\n\nexport default NoticeWrongNetwork;\n","function NoticeOnlyAdmin() {\n  return <p>⚠️ Only Admin can update voting session state.</p>;\n}\n\nexport default NoticeOnlyAdmin;\n","//import { useState } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport Title from \"./Title\";\nimport Address from \"./Address\";\nimport Voters from \"./Voters\";\nimport Proposals from \"./Proposals\";\nimport WorkflowStatus from \"./WorkflowStatus\";\nimport Ballot from \"./Ballot\";\nimport TallyVotes from \"./TallyVotes\";\nimport VoteResult from \"./VoteResult\";\n//import Desc from \"./Desc\";\nimport NoticeNoArtifact from \"./NoticeNoArtifact\";\nimport NoticeWrongNetwork from \"./NoticeWrongNetwork\";\nimport NoticeOnlyAdmin from \"./NoticeOnlyAdmin\";\n\nfunction Voting() {\n  const {\n    state: { artifact, contract, isCurrentUserOwner },\n  } = useEth();\n  // const [value, setValue] = useState(\"?\");\n\n  const Voting = (\n    <>\n      <Address />\n      <Voters />\n      <Proposals />\n      <Ballot />\n      <VoteResult />\n    </>\n  );\n\n  return (\n    <div className=\"Voting\">\n      <Title />\n      {!artifact ? (\n        <NoticeNoArtifact />\n      ) : !contract ? (\n        <NoticeWrongNetwork />\n      ) : (\n        Voting\n      )}\n      {!isCurrentUserOwner ? (\n        <NoticeOnlyAdmin />\n      ) : (\n        <>\n          <TallyVotes />\n          <WorkflowStatus />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Voting;\n","function Link({ uri, text }) {\n  return <a href={uri} target=\"_blank\" rel=\"noreferrer\">{text}</a>;\n}\n\nfunction Footer() {\n  return (\n    <footer>\n      <h2>More resources</h2>\n      <Link uri={\"https://trufflesuite.com\"} text={\"Truffle\"} />\n      <Link uri={\"https://reactjs.org\"} text={\"React\"} />\n      <Link uri={\"https://soliditylang.org\"} text={\"Solidity\"} />\n      <Link uri={\"https://ethereum.org\"} text={\"Ethereum\"} />\n    </footer >\n  );\n}\n\nexport default Footer;\n","import { EthProvider } from \"./contexts/EthContext\";\nimport Intro from \"./components/Intro/\";\n//import Setup from \"./components/Setup\";\nimport Voting from \"./components/Voting\";\nimport Footer from \"./components/Footer\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <EthProvider>\n      <div id=\"App\">\n        <div className=\"container\">\n          <Intro />\n          <hr />\n          <Voting />\n          <hr />\n          <Footer />\n        </div>\n      </div>\n    </EthProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}